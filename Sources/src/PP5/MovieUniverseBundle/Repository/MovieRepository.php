<?php

namespace PP5\MovieUniverseBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;

/**
 * MovieRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MovieRepository extends EntityRepository
{

    public function findMovie($id)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();

        $qb ->select('m, g, r, a')
            ->from('PP5MovieUniverseBundle:Movie\Movie', 'm')
            ->join('m.genre', 'g')
            ->join('m.actors', 'a')
            ->join('m.reviews', 'r')
            ->where('m.id = :id')
            ->setParameter('id', (int) $id);

        return $qb->getQuery()->getSingleResult();
    }

    public function findAllAvailableMovies()
    {
        $qb = $this->createQueryBuilder('m');
        return $qb->getQuery()->getResult();
    }

    public function findMoviesWithReviewsId()
    {
        $qb = $this->getEntityManager()->createQueryBuilder();

        $qb ->select('count(r.movie) as hidden revCount, m.id')
            ->from('PP5MovieUniverseBundle:Movie\Movie', 'm')
            ->join('m.reviews', 'r')
            ->groupBy('m.id')
            ->orderBy('revCount', 'DESC');

        return $qb->getQuery()->getResult();
    }

    // TODO remove if unused
    /*public function findMoviesByGenre($genre)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();

        $qb ->select('m, g, r, a')
            ->from('PP5MovieUniverseBundle:Movie\Movie', 'm')
            ->join('m.genre', 'g')
            ->join('m.actors', 'a')
            ->join('m.reviews', 'r')
            ->where('m.genre = :genre')
            ->setParameter('genre', $genre);

        return $qb->getQuery()->getResult();
    }*/

}
